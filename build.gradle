plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.12.0'
    id "io.freefair.lombok" version "8.13.1"
}

group = "ru.andrchud"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

def allureVersion = "2.29.1"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}


dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
    testImplementation(
            "com.codeborne:selenide:7.8.0",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:5.5.1",
            "io.rest-assured:json-schema-validator:5.5.1",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter:5.13.0-M2",
            "org.slf4j:slf4j-simple:2.0.17",
            "org.assertj:assertj-core:4.0.0-M1",
            "org.aeonbits.owner:owner:1.0.12",
            "com.github.javafaker:javafaker:1.0.2"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs.add("--add-opens=java.base/java.lang=ALL-UNNAMED")
}
//
//task api_test(type: Test) {
//    useJUnitPlatform {
//        includeTags("API")
//    }
//}